"use strict";(self.webpackChunkautomation_dev_portal=self.webpackChunkautomation_dev_portal||[]).push([[9638],{3763:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var t=r(4848),a=r(8453);const s={sidebar_position:1},i="Facade",o={id:"Guides/programming/design-patterns/facade",title:"Facade",description:"Facade Design Pattern:",source:"@site/docs/Guides/programming/design-patterns/facade.md",sourceDirName:"Guides/programming/design-patterns",slug:"/Guides/programming/design-patterns/facade",permalink:"/automation-portal/docs/Guides/programming/design-patterns/facade",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Builder",permalink:"/automation-portal/docs/Guides/programming/design-patterns/builder"},next:{title:"Factory",permalink:"/automation-portal/docs/Guides/programming/design-patterns/factory"}},c={},d=[{value:"<strong>Facade Design Pattern:</strong>",id:"facade-design-pattern",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"facade",children:"Facade"}),"\n",(0,t.jsx)(n.h2,{id:"facade-design-pattern",children:(0,t.jsx)(n.strong,{children:"Facade Design Pattern:"})}),"\n",(0,t.jsxs)(n.p,{children:["According to Oxford Languages, a Facade is:\r\n",(0,t.jsx)(n.code,{children:"an outward appearance that is maintained to conceal a less pleasant or creditable reality."}),'\r\nIn the programming world, the "outward appearance" is the class or interface we interact with as programmers. And the "less pleasant reality" is the complexity that is hidden from us. So a Facade, is simply a wrapper class that can be used to abstract lower-level details that we don\'t want to worry about.']}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# Python arrays are dynamic by default, but this is an example of resizing.\r\nclass Array:\r\n    def __init__(self):\r\n        self.capacity = 2\r\n        self.length = 0\r\n        self.arr = [0] * 2 # Array of capacity = 2\r\n\r\n    # Insert n in the last position of the array\r\n    def pushback(self, n):\r\n        if self.length == self.capacity:\r\n            self.resize()\r\n            \r\n        # insert at next empty position\r\n        self.arr[self.length] = n\r\n        self.length += 1\r\n\r\n    def resize(self):\r\n        # Create new array of double capacity\r\n        self.capacity = 2 * self.capacity\r\n        newArr = [0] * self.capacity \r\n        \r\n        # Copy elements to newArr\r\n        for i in range(self.length):\r\n            newArr[i] = self.arr[i]\r\n        self.arr = newArr\r\n        \r\n    # Remove the last element in the array\r\n    def popback(self):\r\n        if self.length > 0:\r\n            self.length -= 1\n"})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>o});var t=r(6540);const a={},s=t.createContext(a);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);