"use strict";(self.webpackChunkautomation_dev_portal=self.webpackChunkautomation_dev_portal||[]).push([[3639],{5970:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>a});var r=n(4848),t=n(8453);const s={sidebar_position:1},c="Common Architectures Used in Modern Python Development",o={id:"Guides/architectures/architecture",title:"Common Architectures Used in Modern Python Development",description:"1. Monolithic Architecture",source:"@site/docs/Guides/architectures/architecture.md",sourceDirName:"Guides/architectures",slug:"/Guides/architectures/architecture",permalink:"/automation-portal/docs/Guides/architectures/architecture",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"architectures",permalink:"/automation-portal/docs/category/architectures"},next:{title:"\u05e7\u05d5\u05e8\u05e1\u05d9\u05dd",permalink:"/automation-portal/docs/category/\u05e7\u05d5\u05e8\u05e1\u05d9\u05dd"}},l={},a=[{value:"1. Monolithic Architecture",id:"1-monolithic-architecture",level:2},{value:"2. Microservices Architecture",id:"2-microservices-architecture",level:2},{value:"3. Serverless Architecture",id:"3-serverless-architecture",level:2},{value:"4. Model-View-Controller (MVC) Architecture",id:"4-model-view-controller-mvc-architecture",level:2},{value:"5. Clean Architecture (Hexagonal Architecture)",id:"5-clean-architecture-hexagonal-architecture",level:2},{value:"6. Event-Driven Architecture",id:"6-event-driven-architecture",level:2},{value:"7. Layered Architecture (n-Tier)",id:"7-layered-architecture-n-tier",level:2}];function d(e){const i={h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.h1,{id:"common-architectures-used-in-modern-python-development",children:"Common Architectures Used in Modern Python Development"}),"\n",(0,r.jsx)(i.h2,{id:"1-monolithic-architecture",children:"1. Monolithic Architecture"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Description"}),": A single-tiered application where all components are interconnected and interdependent."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Use Cases"}),": Small to medium-sized applications where simplicity and speed of development are priorities."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Pros"}),": Easy to develop, deploy, and test initially."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Cons"}),": Becomes difficult to manage, scale, and maintain as the application grows."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"2-microservices-architecture",children:"2. Microservices Architecture"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Description"}),": The application is broken down into smaller, loosely coupled services, each responsible for a specific functionality."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Use Cases"}),": Large and complex applications requiring scalability and flexibility."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Pros"}),": Improved scalability, easier to maintain and deploy individual services."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Cons"}),": Increased complexity in managing multiple services, requires sophisticated infrastructure."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"3-serverless-architecture",children:"3. Serverless Architecture"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Description"}),": Uses cloud services where the cloud provider manages server management and allocation. Functions are executed in response to events."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Use Cases"}),": Applications with sporadic workloads, real-time data processing, and APIs."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Pros"}),": Reduced operational overhead, automatic scaling, cost-effective for variable workloads."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Cons"}),": Vendor lock-in, potential cold start latency, less control over the environment."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"4-model-view-controller-mvc-architecture",children:"4. Model-View-Controller (MVC) Architecture"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Description"}),": Separates the application into three interconnected components: Model, View, and Controller."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Use Cases"}),": Web applications, especially those developed with frameworks like Django or Flask."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Pros"}),": Clear separation of concerns, easy to manage and scale components individually."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Cons"}),": Can become complex with very large applications."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"5-clean-architecture-hexagonal-architecture",children:"5. Clean Architecture (Hexagonal Architecture)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Description"}),": Focuses on creating loosely coupled application components that can be easily tested and maintained. Emphasizes separation of concerns."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Use Cases"}),": Applications that require high maintainability, testability, and flexibility."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Pros"}),": Improved testability, flexibility, and ease of understanding."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Cons"}),": Higher initial development complexity."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"6-event-driven-architecture",children:"6. Event-Driven Architecture"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Description"}),": Applications are designed around the production, detection, and consumption of events."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Use Cases"}),": Real-time systems, IoT applications, and applications with asynchronous processing needs."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Pros"}),": High scalability, decoupling of components, real-time processing capabilities."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Cons"}),": Complexity in managing event flow, potential for event storms."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"7-layered-architecture-n-tier",children:"7. Layered Architecture (n-Tier)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Description"}),": Application is divided into layers (e.g., presentation, business logic, data access) where each layer has specific responsibilities."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Use Cases"}),": Enterprise applications where separation of concerns and layered development is crucial."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Pros"}),": Clear organization, separation of concerns, and ease of maintenance."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Cons"}),": Can become monolithic if not managed properly, potential performance overhead."]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Each of these architectures has its own strengths and trade-offs. The choice of architecture often depends on the specific requirements of the project, such as scalability, maintainability, development speed, and operational complexity."})})]})}function h(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>c,x:()=>o});var r=n(6540);const t={},s=r.createContext(t);function c(e){const i=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),r.createElement(s.Provider,{value:i},e.children)}}}]);