"use strict";(self.webpackChunkautomation_dev_portal=self.webpackChunkautomation_dev_portal||[]).push([[848],{3232:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var r=t(4848),s=t(8453);const i={sidebar_position:1},a="Queue",o={id:"Guides/programming/data-structure/linear/queue",title:"Queue",description:"Definition",source:"@site/docs/Guides/programming/data-structure/linear/queue.md",sourceDirName:"Guides/programming/data-structure/linear",slug:"/Guides/programming/data-structure/linear/queue",permalink:"/automation-portal/docs/Guides/programming/data-structure/linear/queue",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Linked List",permalink:"/automation-portal/docs/Guides/programming/data-structure/linear/linkedlist"},next:{title:"Stack",permalink:"/automation-portal/docs/Guides/programming/data-structure/linear/stack"}},u={},d=[];function l(e){const n={h1:"h1",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"queue",children:"Queue"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition"}),"\r\nA Queue is a linear data structure that stores elements in a First-In-First-Out (FIFO) manner. In a queue, the first element to be added will be the first to be removed."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Operations"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Enqueue"}),": Add an item to the end of the queue."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Dequeue"}),": Remove the item from the front of the queue."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Peek"}),": View the item at the front without removing it."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Usecases"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Task Scheduling: For managing tasks in a way that they execute in the order they were added."}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Breadth-First Search"}),": In graph algorithms like BFS."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Order Processing"}),": In e-commerce websites for order fulfillment."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Message Queues"}),": For asynchronous data processing."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Data Buffering"}),": In streaming services, to buffer data."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Operating Systems"}),": For process scheduling."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Summary"}),"\r\nA Queue organizes data in a FIFO manner and is widely used in scenarios ranging from task scheduling to data buffering."]})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(6540);const s={},i=r.createContext(s);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);