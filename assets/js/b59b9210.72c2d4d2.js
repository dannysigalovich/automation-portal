"use strict";(self.webpackChunkautomation_dev_portal=self.webpackChunkautomation_dev_portal||[]).push([[9375],{949:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var i=e(4848),r=e(8453);const a={sidebar_position:1},s="Singleton",o={id:"Guides/programming/design-patterns/singleton",title:"Singleton",description:"Singleton Design Pattern:",source:"@site/docs/Guides/programming/design-patterns/singleton.md",sourceDirName:"Guides/programming/design-patterns",slug:"/Guides/programming/design-patterns/singleton",permalink:"/automation-portal/docs/Guides/programming/design-patterns/singleton",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Observer - PubSub",permalink:"/automation-portal/docs/Guides/programming/design-patterns/observer"},next:{title:"Strategy",permalink:"/automation-portal/docs/Guides/programming/design-patterns/strategy"}},p={},l=[{value:"<strong>Singleton Design Pattern</strong>:",id:"singleton-design-pattern",level:2},{value:"<strong>Example:</strong>",id:"example",level:2}];function g(n){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"singleton",children:"Singleton"}),"\n",(0,i.jsxs)(t.h2,{id:"singleton-design-pattern",children:[(0,i.jsx)(t.strong,{children:"Singleton Design Pattern"}),":"]}),"\n",(0,i.jsx)(t.p,{children:"This pattern ensures that a class has only one instance and provides a global point of access to that instance. It's useful when you want to ensure something is only done once, like initializing a configuration or making a single connection to a database."}),"\n",(0,i.jsx)(t.h2,{id:"example",children:(0,i.jsx)(t.strong,{children:"Example:"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"class ApplicationState:\r\n    instance = None\r\n\r\n    def __init__(self):\r\n        self.isLoggedIn = False\r\n\r\n    @staticmethod\r\n    def getAppState():\r\n        if not ApplicationState.instance:  \r\n            ApplicationState.instance = ApplicationState()\r\n        return ApplicationState.instance\r\n\r\nappState1 = ApplicationState.getAppState()\r\nprint(appState1.isLoggedIn)\r\n\r\nappState2 = ApplicationState.getAppState()\r\nappState1.isLoggedIn = True\r\n\r\nprint(appState1.isLoggedIn)\r\nprint(appState2.isLoggedIn)\r\n\n"})})]})}function c(n={}){const{wrapper:t}={...(0,r.R)(),...n.components};return t?(0,i.jsx)(t,{...n,children:(0,i.jsx)(g,{...n})}):g(n)}},8453:(n,t,e)=>{e.d(t,{R:()=>s,x:()=>o});var i=e(6540);const r={},a=i.createContext(r);function s(n){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function o(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:s(n.components),i.createElement(a.Provider,{value:t},n.children)}}}]);